{"version":3,"sources":["components/card/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","description","item","title","url","urlToImage","className","src","alt","href","App","useState","card","setCard","news","setCards","renderNews","slice","useEffect","window","addEventListener","handleScroll","removeEventListener","e","target","documentElement","scrollHeight","scrollTop","innerHeight","getCards","a","axios","get","res","data","articles","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAoBeA,MAlBf,SAAcC,GACZ,IAAMC,EAAcD,EAAME,KAAKD,YACzBE,EAAQH,EAAME,KAAKC,MACnBC,EAAMJ,EAAME,KAAKE,IACjBC,EAAaL,EAAME,KAAKG,WAE9B,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAKF,EAAYG,IAAI,kHAC1B,gCACE,mBAAGC,KAAML,EAAT,kDACA,oBAAIE,UAAU,cAAd,SAA6BH,IAC7B,oBAAIG,UAAU,oBAAd,SAAmCL,W,uBC+C5BS,MAxDf,WACE,MAAmC,GAA3BP,EAAR,EAAQA,MAAOC,EAAf,EAAeA,IAAKC,EAApB,EAAoBA,WAGpB,EAAwBM,mBAFL,IAEnB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAyBF,mBAAS,IAAlC,mBAAOG,EAAP,KAAaC,EAAb,KACIC,EAAU,sBACTF,EAAKG,MAAM,EALG,KAIL,YAETH,EAAKG,MANS,GAMSL,KAG5BM,qBAAU,WAER,OADAC,OAAOC,iBAAiB,SAAUC,GAC3B,kBAAMF,OAAOG,oBAAoB,SAAUD,MAEjD,CAACT,IAEJ,IAAMS,EAAe,SAACE,GAElBA,EAAEC,OAAOC,gBAAgBC,cACtBH,EAAEC,OAAOC,gBAAgBE,UAAYR,OAAOS,aAC/C,KAEAf,EAAQD,EAAO,IAcnB,OAVAM,qBAAU,WACR,IAAMW,EAAQ,uCAAG,4BAAAC,EAAA,sEACGC,IAAMC,IACtB,iLAFa,OACTC,EADS,OAIflB,EAASkB,EAAIC,KAAKC,UAJH,2CAAH,qDAMdN,MACC,IAGD,sBAAKvB,UAAU,MAAf,UACE,iHACA,sOACA,qBAAKA,UAAU,UAAf,SACGU,EAAWoB,KAAI,SAAClC,EAAMmC,GAAP,OACd,cAAC,EAAD,CAEEnC,KAAMA,EACNC,MAAOA,EACPE,WAAYA,EACZD,IAAKA,GAJAiC,YCrCFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3dc19e3d.chunk.js","sourcesContent":["import \"./card.css\";\r\n\r\nfunction Card(props) {\r\n  const description = props.item.description;\r\n  const title = props.item.title;\r\n  const url = props.item.url;\r\n  const urlToImage = props.item.urlToImage;\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={urlToImage} alt=\"картинка отсутсвует\" />\r\n      <div>\r\n        <a href={url}>ссылка</a>\r\n        <h4 className=\"card__title\">{title}</h4>\r\n        <h5 className=\"card__description\">{description}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import Card from \"./components/card/Card\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  const { title, url, urlToImage } = [];\r\n  const cardsSumma = 15; //количество рендеров карточек\r\n\r\n  const [card, setCard] = useState(cardsSumma);\r\n  const [news, setCards] = useState([]);\r\n  let renderNews = [\r\n    ...news.slice(0, cardsSumma),\r\n    ...news.slice(cardsSumma, card),\r\n  ];\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n    // eslint-disable-next-line\r\n  }, [card]);\r\n\r\n  const handleScroll = (e) => {\r\n    if (\r\n      e.target.documentElement.scrollHeight -\r\n        (e.target.documentElement.scrollTop + window.innerHeight) <\r\n      100\r\n    ) {\r\n      setCard(card + 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getCards = async () => {\r\n      const res = await axios.get(\r\n        \"https://nomoreparties.co/news/v2/everything?language=ru&sortBy=publishedAt&pageSize=100&qInTitle=Россия&apiKey=10e8db0981ec4941becf1c27cd92454d\"\r\n      );\r\n      setCards(res.data.articles);\r\n    };\r\n    getCards();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Новости России</h1>\r\n      <h3>Карточки добавляются по скроллу мыши</h3>\r\n      <div className=\"wrapper\">\r\n        {renderNews.map((item, index) => (\r\n          <Card\r\n            key={index}\r\n            item={item}\r\n            title={title}\r\n            urlToImage={urlToImage}\r\n            url={url}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}